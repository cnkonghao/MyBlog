<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.CommentMapper">
	<resultMap id="BaseResultMap" type="com.blog.pojo.Comment">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="postid" jdbcType="INTEGER" property="postid" />
		<result column="created_at" jdbcType="INTEGER" property="createdAt" />
		<result column="username" jdbcType="VARCHAR" property="username" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.blog.pojo.Comment">
		<result column="content" jdbcType="LONGVARCHAR" property="content" />
	</resultMap>
	<sql id="Base_Column_List">
		id, postid, created_at, username
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>

	<select id="selectByPostId" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select id, postid, created_at,
		username, content
		from comment
		where postid = #{postid}
		order by id desc
	</select>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from comment
		where id = #{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from comment
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.blog.pojo.Comment">
		insert into comment (id, postid, created_at,
		username, content)
		values (#{id,jdbcType=INTEGER}, #{postid,jdbcType=INTEGER},
		#{createdAt,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.blog.pojo.Comment">
		insert into comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="postid != null">
				postid,
			</if>
			<if test="createdAt != null">
				created_at,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="postid != null">
				#{postid,jdbcType=INTEGER},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.blog.pojo.Comment">
		update comment
		<set>
			<if test="postid != null">
				postid = #{postid,jdbcType=INTEGER},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.blog.pojo.Comment">
		update comment
		set postid = #{postid,jdbcType=INTEGER},
		created_at = #{createdAt,jdbcType=INTEGER},
		username = #{username,jdbcType=VARCHAR},
		content = #{content,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.blog.pojo.Comment">
		update comment
		set postid = #{postid,jdbcType=INTEGER},
		created_at = #{createdAt,jdbcType=INTEGER},
		username = #{username,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>